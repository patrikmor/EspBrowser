<Window x:Class="EspBrowser.Views.MainWindow"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:EspBrowser"
    xmlns:v="clr-namespace:EspBrowser.Views"
	xmlns:xcad="http://schemas.xceed.com/wpf/xaml/avalondock"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Platform"
    xmlns:md="https://github.com/fantasticfiasco/mvvm-dialogs"
    md:DialogServiceViews.IsRegistered="True"
	Title="{Binding Title}" Width="1280" Height="960" WindowStartupLocation="CenterScreen" Icon="/EspBrowser;component/Images/Processor_16x.png"
    DataContext="{Binding MainWindow, Source={StaticResource Locator}}" Loaded="Window_Loaded" Closing="Window_Closing">

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <cmd:EventToCommand Command="{Binding WindowClosingCommand}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <!--InputBindings-->
    <Window.InputBindings>
        <KeyBinding Command="{Binding NewFileCommand}" Key="N" Modifiers="Ctrl" />
        <KeyBinding Command="{Binding OpenFileCommand}" Key="O" Modifiers="Ctrl" />
        <KeyBinding Command="{Binding UploadFileCommand}" Key="U" Modifiers="Ctrl" />
        <KeyBinding Command="{Binding CloseFileCommand}" Key="F4" Modifiers="Ctrl" />
        <KeyBinding Command="{Binding SaveFileCommand}" Key="S" Modifiers="Ctrl" />
        <KeyBinding Command="{Binding SaveAllCommand}" Key="S" Modifiers="Ctrl+Shift" />
        <KeyBinding Command="{Binding ShowTerminalCommand}" Key="T" Modifiers="Ctrl+Alt" />
        <KeyBinding Command="{Binding ShowSpiffsCommand}" Key="S" Modifiers="Ctrl+Alt" />
    </Window.InputBindings>

    <!--Resources-->
    <Window.Resources>
        <local:ActiveDocumentConverter x:Key="ActiveDocumentConverter" />
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </Window.Resources>

    <DockPanel>

        <!--Main Menu-->
        <Menu DockPanel.Dock="Top" x:Name="Menu">
            <MenuItem Header="_File">
                <MenuItem Header="_New" Command="{Binding NewFileCommand}" InputGestureText="Ctrl+N">
                    <MenuItem.Icon>
                        <Image Source="{DynamicResource Image_NewFile}" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Open..." Command="{Binding OpenFileCommand}" InputGestureText="Ctrl+O">
                    <MenuItem.Icon>
                        <Image Source="{DynamicResource Image_OpenFolder}" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Save" Command="{Binding SaveFileCommand}" InputGestureText="Ctrl+S">
                    <MenuItem.Icon>
                        <Image Source="{DynamicResource Image_Save}" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Save _As..." Command="{Binding SaveFileAsCommand}">
                    <MenuItem.Icon>
                        <Image Source="{DynamicResource Image_SaveAs}" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Save A_ll..." Command="{Binding SaveAllCommand}" InputGestureText="Ctrl+Shift+S">
                    <MenuItem.Icon>
                        <Image Source="{DynamicResource Image_SaveAll}" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Upload to ESP" Command="{Binding UploadFileCommand}" InputGestureText="Ctrl+U">
                    <MenuItem.Icon>
                        <Image Source="{DynamicResource Image_TransferUpload}" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Close" Command="{Binding CloseFileCommand}" InputGestureText="Ctrl+F4" />
                <MenuItem Header="_Recent Files" ItemsSource="{Binding RecentFiles}" Command="{Binding RecentFileCommand}" Visibility="{Binding IsRecentFilesVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <ItemsControl.ItemContainerStyle>
                        <Style TargetType="MenuItem">
                            <Setter Property="Header" Value="{Binding}" />
                            <Setter Property="Command" Value="{Binding ElementName=Menu, Path=DataContext.RecentFileCommand}" />
                            <Setter Property="CommandParameter" Value="{Binding}" />
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                </MenuItem>
                <Separator/>
                <MenuItem Header="Se_ttings..." Command="{Binding SettingsCommand}">
                    <MenuItem.Icon>
                        <Image Source="{DynamicResource Image_Settings}" />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <MenuItem Header="E_xit" Command="{Binding ExitCommand}" InputGestureText="Alt+F4" />
            </MenuItem>
            <MenuItem Header="_Edit">
                <MenuItem Header="_Undo" Command="Undo">
                    <MenuItem.Icon>
                        <Image Source="{DynamicResource Image_Undo}" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Redo" Command="Redo">
                    <MenuItem.Icon>
                        <Image Source="{DynamicResource Image_Redo}" />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <MenuItem Header="Cu_t" Command="Cut">
                    <MenuItem.Icon>
                        <Image Source="{DynamicResource Image_Cut}" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Copy" Command="Copy">
                    <MenuItem.Icon>
                        <Image Source="{DynamicResource Image_Copy}" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Paste" Command="Paste">
                    <MenuItem.Icon>
                        <Image Source="{DynamicResource Image_Paste}" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Delete" Command="Delete">
                    <MenuItem.Icon>
                        <Image Source="{DynamicResource Image_Delete}" />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <MenuItem Header="Quick _Find..." Command="Find">
                    <MenuItem.Icon>
                        <Image Source="{DynamicResource Image_QuickFind}" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Quick Rep_lace..." Command="Replace">
                    <MenuItem.Icon>
                        <Image Source="{DynamicResource Image_QuickReplace}" />
                    </MenuItem.Icon>
                </MenuItem>                
            </MenuItem>
            <MenuItem Header="_View">
                <MenuItem Header="_Terminal" Command="{Binding ShowTerminalCommand}" InputGestureText="Ctrl+Alt+T">
                    <MenuItem.Icon>
                        <Image Source="{DynamicResource Image_SerialPort}" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_SPIFFS Explorer" Command="{Binding ShowSpiffsCommand}" InputGestureText="Ctrl+Alt+S">
                    <MenuItem.Icon>
                        <Image Source="{DynamicResource Image_FileGroup}" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="_Window" ItemsSource="{Binding Documents}">
                <MenuItem.ItemContainerStyle>
                    <Style TargetType="{x:Type MenuItem}">
                        <Setter Property="Command" Value="{Binding DataContext.WindowCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type MenuItem}, AncestorLevel=1}}" />
                        <Setter Property="CommandParameter" Value="{Binding}" />
                    </Style>
                </MenuItem.ItemContainerStyle>
                <MenuItem.ItemTemplate>
                    <ItemContainerTemplate>
                        <TextBlock Text="{Binding Title}" />
                    </ItemContainerTemplate>
                </MenuItem.ItemTemplate>
            </MenuItem>
            <MenuItem Header="_Help">
                <MenuItem Header="_Open on GitHub" Command="{Binding GitHubCommand}">
                    <MenuItem.Icon>
                        <Image Source="{DynamicResource Image_Web}" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_About ESP Browser..." Command="{Binding AboutCommand}">
                    <MenuItem.Icon>
                        <Image Source="{DynamicResource Image_StatusHelp}" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
        </Menu>

        <!--Toolbars-->
        <ToolBarTray DockPanel.Dock="Top">

            <!--Toolbar File-->
            <ToolBar>
                <Button Command="{Binding NewFileCommand}" ToolTip="New file">
                    <Image Source="{DynamicResource Image_NewFile}" />
                </Button>
                <Button Command="{Binding OpenFileCommand}" ToolTip="Open file">
                    <Image Source="{DynamicResource Image_OpenFolder}" />
                </Button>
                <Button Command="{Binding SaveFileCommand}" ToolTip="Save file">
                    <Image Source="{DynamicResource Image_Save}" />
                </Button>
                <Button Command="{Binding SaveAllCommand}" ToolTip="Save all files">
                    <Image Source="{DynamicResource Image_SaveAll}" />
                </Button>
                <Button Command="{Binding UploadFileCommand}" ToolTip="Upload current file to ESP">
                    <Image Source="{DynamicResource Image_TransferUpload}" />
                </Button>
                <Separator/>
                <Button Command="Undo" ToolTip="Undo">
                    <Image Source="{DynamicResource Image_Undo}" />
                </Button>
                <Button Command="Redo" ToolTip="Redo">
                    <Image Source="{DynamicResource Image_Redo}" />
                </Button>
                <Separator/>                
                <Button Command="Cut" ToolTip="Cut">
                    <Image Source="{DynamicResource Image_Cut}" />
                </Button>
                <Button Command="Copy" ToolTip="Copy">
                    <Image Source="{DynamicResource Image_Copy}" />
                </Button>
                <Button Command="Paste" ToolTip="Paste">
                    <Image Source="{DynamicResource Image_Paste}" />
                </Button>
                <Button Command="Delete" ToolTip="Delete">
                    <Image Source="{DynamicResource Image_Delete}" />
                </Button>
                <Separator/>
                <ToggleButton Command="{Binding LineNumbersCommand}" ToolTip="Show line numbers"
                              IsChecked="{Binding ActiveDocument.ShowLineNumbers, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                    <Image Source="{DynamicResource Image_Numeric}" />
                </ToggleButton>
                <ToggleButton Command="{Binding WordWrapCommand}" ToolTip="Toggle word wrap"
                              IsChecked="{Binding ActiveDocument.WordWrap, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                    <Image Source="{DynamicResource Image_WordWrap}" />
                </ToggleButton>                
                <Button Command="Find" ToolTip="Quick find">
                    <Image Source="{DynamicResource Image_QuickFind}" />
                </Button>
                <Button Command="Replace" ToolTip="Quick replace">
                    <Image Source="{DynamicResource Image_QuickReplace}" />
                </Button>
            </ToolBar>

            <!--Toolbar Terminal-->
            <ToolBar>
                <TextBlock Margin="5">Port</TextBlock>
                <ComboBox ItemsSource="{Binding Terminal.PortNames}" SelectedItem="{Binding Terminal.PortName}" IsEnabled="{Binding Terminal.IsDisconnected}" />
                <Button ToolTip="Refresh ports" Command="{Binding Terminal.RefreshPortNamesCommand}" Name="btn_refresh_ports">
                    <Image Source="{DynamicResource Image_Refresh}" Width="16" Height="16" />
                </Button>
                <TextBlock Margin="5">Baud rate</TextBlock>
                <ComboBox ItemsSource="{Binding Terminal.BaudRates}" SelectedItem="{Binding Terminal.BaudRate}" IsEnabled="{Binding Terminal.IsDisconnected}" />
                <Button ToolTip="{Binding Terminal.ConnectToolTip}" Command="{Binding Terminal.ConnectCommand}">
                    <Image Source="{Binding Terminal.ConnectImageSource}" Width="16" Height="16" />
                </Button>
                <Separator/>
                <Button ToolTip="Soft reset ESP" Command="{Binding Terminal.SoftResetCommand}">
                    <Image Source="{DynamicResource Image_Restart}" Width="16" Height="16" />
                </Button>
                <Button ToolTip="Hard reset ESP" Command="{Binding Terminal.HardResetCommand}">
                    <Image Source="{DynamicResource Image_RestartRed}" Width="16" Height="16" />
                </Button>
                <Button ToolTip="Print chip ID" Command="{Binding Terminal.ChipIdCommand}">
                    <Image Source="{DynamicResource Image_Processor}" Width="16" Height="16" />
                </Button>
                <Button ToolTip="Print available heap size" Command="{Binding Terminal.HeapCommand}">
                    <Image Source="{DynamicResource Image_MemoryChip}" Width="16" Height="16" />
                </Button>
                <Button ToolTip="Show NodeMCU info" Command="{Binding Terminal.InfoCommand}">
                    <Image Source="{DynamicResource Image_InformationSymbol}" Width="16" Height="16" />
                </Button>
            </ToolBar>

        </ToolBarTray>

        <!--Status Bar-->
        <StatusBar DockPanel.Dock="Bottom">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem Grid.Column="0">
                <StackPanel Orientation="Horizontal">
                    <Image Source="{Binding StatusWorkingImage}" Width="16" Height="16" />
                    <TextBlock Text="{Binding StatusWorkingText}" Margin="2,0,0,0" />
                    <Grid>
                        <ProgressBar Name="pbStatus" Margin="10,0,10,0" Width="100" Height="16" IsIndeterminate="{Binding IsProgressBarIndeterminate}"
                                     Minimum="0" Maximum="100" Value="{Binding ProgressBarValue}"
                                     Visibility="{Binding IsProgressBarVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
                        <TextBlock Text="{Binding ElementName=pbStatus, Path=Value, StringFormat={}{0:0}%}" HorizontalAlignment="Center" VerticalAlignment="Center"
                                   Visibility="{Binding IsProgressBarValueVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
                    </Grid>
                    <TextBlock>
                        <Hyperlink Command="{Binding CancelCommand}">
                            <TextBlock Visibility="{Binding IsCancelEnabled, Converter={StaticResource BooleanToVisibilityConverter}}">Cancel</TextBlock>
                        </Hyperlink>
                    </TextBlock>
                </StackPanel>
            </StatusBarItem>
            <StatusBarItem Grid.Column="1">
                <StackPanel Orientation="Horizontal">
                    <Image Source="{Binding StatusConnectionImage}" Width="16" Height="16" />
                    <TextBlock Text="{Binding StatusConnectionText}" Margin="2,0,5,0" />
                </StackPanel>
            </StatusBarItem>
        </StatusBar>

        <!--Docking Manager-->
        <xcad:DockingManager Name="docking_manager"
                             DocumentsSource="{Binding Documents}"
                             AnchorablesSource="{Binding Anchorables}"
                             ActiveContent="{Binding ActiveDocument, Mode=TwoWay, Converter={StaticResource ActiveDocumentConverter}}">

            <!--LayoutInitializer-->
            <xcad:DockingManager.LayoutUpdateStrategy>
                <local:LayoutInitializer/>
            </xcad:DockingManager.LayoutUpdateStrategy>

            <!--Templates-->
            <xcad:DockingManager.LayoutItemTemplateSelector>
                <local:PanesTemplateSelector>

                    <!--DocumentTemplate-->
                    <local:PanesTemplateSelector.DocumentTemplate>
                        <DataTemplate>
                            <local:CodeTextEditor SyntaxHighlighting="Lua" BorderBrush="Silver" BorderThickness="1" Document="{Binding Document}"
                                                  IsReadOnly="{Binding IsReadOnly}" ShowLineNumbers="{Binding ShowLineNumbers}" WordWrap="{Binding WordWrap}"
                                                  IsModified="{Binding IsModified, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                                <local:CodeTextEditor.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Cut" Command="Cut">
                                            <MenuItem.Icon>
                                                <Image Source="{DynamicResource Image_Cut}" />
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem Header="Copy" Command="Copy">
                                            <MenuItem.Icon>
                                                <Image Source="{DynamicResource Image_Copy}" />
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem Header="Paste" Command="Paste">
                                            <MenuItem.Icon>
                                                <Image Source="{DynamicResource Image_Paste}" />
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem Header="Delete" Command="Delete">
                                            <MenuItem.Icon>
                                                <Image Source="{DynamicResource Image_Delete}" />
                                            </MenuItem.Icon>
                                        </MenuItem>
                                    </ContextMenu>
                                </local:CodeTextEditor.ContextMenu>
                            </local:CodeTextEditor>
                        </DataTemplate>
                    </local:PanesTemplateSelector.DocumentTemplate>

                    <!--TerminalTemplate-->
                    <local:PanesTemplateSelector.TerminalTemplate>
                        <DataTemplate>
                            <Border BorderBrush="Silver" BorderThickness="1">
                                <DockPanel>

                                    <!--Terminal Toolbar-->
                                    <ToolBar DockPanel.Dock="Top" ToolBarTray.IsLocked="True">
                                        <Button ToolTip="Clear all" Command="{Binding ClearAllCommand}">
                                            <Image Source="{DynamicResource Image_ClearWindowContent}" Width="16" Height="16" />
                                        </Button>
                                        <ToggleButton ToolTip="Toggle word wrap" IsChecked="{Binding WordWrap, ElementName=txt_terminal, Mode=TwoWay}">
                                            <Image Source="{DynamicResource Image_WordWrap}" Width="16" Height="16" />
                                        </ToggleButton>
                                        <ToggleButton ToolTip="Automatically scroll to end" IsChecked="{Binding AutoScrollToEnd, ElementName=txt_terminal}">
                                            <Image Source="{DynamicResource Image_ScrollBox}" Width="16" Height="16" />
                                        </ToggleButton>
                                    </ToolBar>

                                    <!--Terminal send command-->
                                    <DockPanel DockPanel.Dock="Bottom">
                                        <Button DockPanel.Dock="Right" Padding="10,4" Command="{Binding SendCommand}" ToolTip="Send command (Enter)">
                                            <Image Source="{DynamicResource Image_RunBlue}" Width="16" Height="16" />
                                        </Button>
                                        <ComboBox IsEditable="True" FontFamily="Consolas" FontSize="10pt" ItemsSource="{Binding SendHistory}" Text="{Binding SendText}" IsEnabled="{Binding IsEnabled}">
                                            <ComboBox.InputBindings>
                                                <KeyBinding Command="{Binding SendCommand}" Key="Return" />
                                            </ComboBox.InputBindings>
                                        </ComboBox>
                                    </DockPanel>

                                    <!--Terminal output-->
                                    <local:CodeTextEditor x:Name="txt_terminal" SyntaxHighlighting="Lua" BorderBrush="Silver" BorderThickness="1" Document="{Binding Document}"
                                                          IsReadOnly="True" AutoScrollToEnd="{Binding AutoScrollToEnd}">
                                        <local:CodeTextEditor.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Header="Copy" Command="Copy">
                                                    <MenuItem.Icon>
                                                        <Image Source="{DynamicResource Image_Copy}" />
                                                    </MenuItem.Icon>
                                                </MenuItem>
                                                <Separator/>
                                                <MenuItem Header="Clear all" Command="{Binding ClearAllCommand}">
                                                    <MenuItem.Icon>
                                                        <Image Source="{DynamicResource Image_ClearWindowContent}" />
                                                    </MenuItem.Icon>
                                                </MenuItem>
                                            </ContextMenu>
                                        </local:CodeTextEditor.ContextMenu>
                                    </local:CodeTextEditor>
                                </DockPanel>
                            </Border>
                        </DataTemplate>
                    </local:PanesTemplateSelector.TerminalTemplate>

                    <!--SpiffsTemplate-->
                    <local:PanesTemplateSelector.SpiffsTemplate>
                        <DataTemplate>
                            <DockPanel>

                                <!--SPIFFS Toolbar-->
                                <ToolBar DockPanel.Dock="Top" ToolBarTray.IsLocked="True">
                                    <Button ToolTip="Refresh files" Command="{Binding RefreshCommand}">
                                        <Image Source="{DynamicResource Image_Refresh}" Width="16" Height="16" />
                                    </Button>
                                    <Separator/>                                    
                                    <Button ToolTip="Open file in editor" Command="{Binding OpenFileCommand}">
                                        <Image Source="{DynamicResource Image_OpenFolder}" Width="16" Height="16" />
                                    </Button>
                                    <Button ToolTip="Download file to disk" Command="{Binding DownloadFileToDiskCommand}">
                                        <Image Source="{DynamicResource Image_DownloadFile}" Width="16" Height="16" />
                                    </Button>
                                    <Button ToolTip="Upload file from disk" Command="{Binding UploadFileFromDiskCommand}">
                                        <Image Source="{DynamicResource Image_UploadFile}" Width="16" Height="16" />
                                    </Button>
                                    <Button ToolTip="Print file to console" Command="{Binding PrintFileCommand}">
                                        <Image Source="{DynamicResource Image_PrintPreview}" Width="16" Height="16" />
                                    </Button>
                                    <Button ToolTip="Execute file" Command="{Binding ExecuteFileCommand}">
                                        <Image Source="{DynamicResource Image_Run}" Width="16" Height="16" />
                                    </Button>
                                    <Button ToolTip="Compile file" Command="{Binding CompileFileCommand}">
                                        <Image Source="{DynamicResource Image_BuildSolution}" Width="16" Height="16" />
                                    </Button>                                    
                                    <Button ToolTip="Rename file" Command="{Binding RenameFileCommand}">
                                        <Image Source="{DynamicResource Image_Rename}" Width="16" Height="16" />
                                    </Button>
                                    <Button ToolTip="Delete file" Command="{Binding DeleteFileCommand}">
                                        <Image Source="{DynamicResource Image_Delete}" Width="16" Height="16" />
                                    </Button>
                                    <Separator/>
                                    <Button ToolTip="Format device filesystem" Command="{Binding FormatCommand}">
                                        <Image Source="{DynamicResource Image_Event}" Width="16" Height="16" />
                                    </Button>
                                </ToolBar>

                                <!--SPIFFS StatusBar-->
                                <Border DockPanel.Dock="Bottom" BorderBrush="Gray" BorderThickness="1">
                                    <Grid Margin="10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="70" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="80" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <TextBlock Grid.Row="0" Grid.Column="0" Text="Total files:" />
                                        <TextBlock Grid.Row="0" Grid.Column="1" HorizontalAlignment="Right" Text="{Binding TotalFilesText}" />
                                        <TextBlock Grid.Row="1" Grid.Column="0" Text="Total bytes:" />
                                        <TextBlock Grid.Row="1" Grid.Column="1" HorizontalAlignment="Right" Text="{Binding TotalBytesText}" />
                                        <TextBlock Grid.Row="2" Grid.Column="0" Text="Used bytes:" />
                                        <TextBlock Grid.Row="2" Grid.Column="1" HorizontalAlignment="Right" Text="{Binding UsedBytesText}" />
                                        <TextBlock Grid.Row="3" Grid.Column="0" Text="Free bytes:" />
                                        <TextBlock Grid.Row="3" Grid.Column="1" HorizontalAlignment="Right" Text="{Binding FreeBytesText}" />
                                        <Canvas Grid.RowSpan="4" Grid.Column="2" Width="45" Height="45" Margin="20,0,0,0">
                                            <v:SimplePieChart Percentage="{Binding ChartValue}" Size="45" />
                                            <TextBlock Margin="15,15" FontSize="8pt" Text="{Binding ChartText}" />
                                        </Canvas>
                                    </Grid>
                                </Border>

                                <!--SPIFFS Files-->
                                <ListView ItemsSource="{Binding Files}" SelectedItem="{Binding SelectedFile}" IsSynchronizedWithCurrentItem="True"
                                          local:DoubleClickCommandBehavior.HandleDoubleClick="True"
                                          local:DoubleClickCommandBehavior.TheCommandToRun="{Binding OpenFileCommand}">
                                    <ListView.InputBindings>
                                        <KeyBinding Command="{Binding RenameFileCommand}" Key="F2" />
                                        <KeyBinding Command="{Binding DeleteFileCommand}" Key="Delete" />
                                        <KeyBinding Command="{Binding RefreshCommand}" Key="R" Modifiers="Ctrl" />
                                    </ListView.InputBindings>
                                    <ListView.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="Open file in editor" Command="{Binding OpenFileCommand}" FontWeight="Bold">
                                                <MenuItem.Icon>
                                                    <Image Source="{DynamicResource Image_OpenFolder}"></Image>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <MenuItem Header="Download file to disk..." Command="{Binding DownloadFileToDiskCommand}">
                                                <MenuItem.Icon>
                                                    <Image Source="{DynamicResource Image_DownloadFile}"></Image>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <MenuItem Header="Upload file from disk..." Command="{Binding UploadFileFromDiskCommand}">
                                                <MenuItem.Icon>
                                                    <Image Source="{DynamicResource Image_UploadFile}"></Image>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <MenuItem Header="Print file to console" Command="{Binding PrintFileCommand}">
                                                <MenuItem.Icon>
                                                    <Image Source="{DynamicResource Image_PrintPreview}"></Image>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <MenuItem Header="Execute file" Command="{Binding ExecuteFileCommand}">
                                                <MenuItem.Icon>
                                                    <Image Source="{DynamicResource Image_Run}"></Image>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <MenuItem Header="Compile file" Command="{Binding CompileFileCommand}">
                                                <MenuItem.Icon>
                                                    <Image Source="{DynamicResource Image_BuildSolution}"></Image>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <MenuItem Header="Rename file..." Command="{Binding RenameFileCommand}" InputGestureText="F2">
                                                <MenuItem.Icon>
                                                    <Image Source="{DynamicResource Image_Rename}"></Image>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <MenuItem Header="Delete file" Command="{Binding DeleteFileCommand}" InputGestureText="Del">
                                                <MenuItem.Icon>
                                                    <Image Source="{DynamicResource Image_Delete}"></Image>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <Separator/>
                                            <MenuItem Header="Refresh files" Command="{Binding RefreshCommand}" InputGestureText="Ctrl+R">
                                                <MenuItem.Icon>
                                                    <Image Source="{DynamicResource Image_Refresh}"></Image>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                        </ContextMenu>
                                    </ListView.ContextMenu>
                                    <ListView.ItemContainerStyle>
                                        <Style TargetType="ListViewItem">
                                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                        </Style>
                                    </ListView.ItemContainerStyle>
                                    <ListView.View>
                                        <GridView>
                                            <GridViewColumn Width="150" DisplayMemberBinding="{Binding Name}">
                                                <GridViewColumn.Header>
                                                    <GridViewColumnHeader Tag="Name" Click="GridViewColumnHeader_Click">File name</GridViewColumnHeader>
                                                </GridViewColumn.Header>
                                            </GridViewColumn>
                                            <GridViewColumn Width="80">
                                                <GridViewColumn.Header>
                                                    <GridViewColumnHeader Tag="Size" Click="GridViewColumnHeader_Click">File size</GridViewColumnHeader>
                                                </GridViewColumn.Header>
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding Size, StringFormat='n0'}" TextAlignment="Right" />
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                        </GridView>
                                    </ListView.View>
                                </ListView>

                            </DockPanel>
                        </DataTemplate>
                    </local:PanesTemplateSelector.SpiffsTemplate>
                </local:PanesTemplateSelector>
            </xcad:DockingManager.LayoutItemTemplateSelector>

            <!--Styles-->
            <xcad:DockingManager.LayoutItemContainerStyleSelector>
                <local:PanesStyleSelector>
                    
                    <!--DocumentStyle-->
                    <local:PanesStyleSelector.DocumentStyle>
                        <Style TargetType="{x:Type xcad:LayoutItem}">
                            <Setter Property="ContentId" Value="{Binding Model.ContentId}" />
                            <Setter Property="Title" Value="{Binding Model.Title}" />
                            <Setter Property="ToolTip" Value="{Binding Model.ToolTip}" />
                            <Setter Property="IconSource" Value="{Binding Model.IconSource}" />
                            <Setter Property="IsActive" Value="{Binding Model.IsActive, Mode=TwoWay}" />
                            <Setter Property="CanClose" Value="{Binding Model.CanClose}" />
                            <Setter Property="CanFloat" Value="{Binding Model.CanFloat}" />
                            <Setter Property="CloseCommand" Value="{Binding Model.CloseCommand}" />
                        </Style>
                    </local:PanesStyleSelector.DocumentStyle>
                    
                    <!--TerminalStyle-->
                    <local:PanesStyleSelector.TerminalStyle>
                        <Style TargetType="{x:Type xcad:LayoutAnchorableItem}">
                            <Setter Property="ContentId" Value="{Binding Model.ContentId}" />
                            <Setter Property="Title" Value="{Binding Model.Title}" />
                            <Setter Property="ToolTip" Value="{Binding Model.ToolTip}" />
                            <Setter Property="IconSource" Value="{Binding Model.IconSource}" />
                            <Setter Property="IsActive" Value="{Binding Model.IsActive, Mode=TwoWay}" />
                            <Setter Property="CanHide" Value="{Binding Model.CanHide}" />
                            <Setter Property="CanFloat" Value="{Binding Model.CanFloat}" />
                            <Setter Property="HideCommand" Value="{Binding Model.HideCommand}" />
                            <Setter Property="CloseCommand" Value="{Binding Model.CloseCommand}" />
                        </Style>
                    </local:PanesStyleSelector.TerminalStyle>

                    <!--SpiffsStyle-->
                    <local:PanesStyleSelector.SpiffsStyle>
                        <Style TargetType="{x:Type xcad:LayoutAnchorableItem}">
                            <Setter Property="ContentId" Value="{Binding Model.ContentId}" />
                            <Setter Property="Title" Value="{Binding Model.Title}" />
                            <Setter Property="ToolTip" Value="{Binding Model.ToolTip}" />
                            <Setter Property="IconSource" Value="{Binding Model.IconSource}" />
                            <Setter Property="IsActive" Value="{Binding Model.IsActive, Mode=TwoWay}" />
                            <Setter Property="CanHide" Value="{Binding Model.CanHide}" />
                            <Setter Property="CanFloat" Value="{Binding Model.CanFloat}" />
                            <Setter Property="HideCommand" Value="{Binding Model.HideCommand}" />
                            <Setter Property="CloseCommand" Value="{Binding Model.CloseCommand}" />
                        </Style>
                    </local:PanesStyleSelector.SpiffsStyle>
                </local:PanesStyleSelector>
            </xcad:DockingManager.LayoutItemContainerStyleSelector>

            <!--DocumentHeaderTemplate-->
            <xcad:DockingManager.DocumentHeaderTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <Image Source="{Binding IconSource}" Margin="0,0,4,0" />
                        <TextBlock Text="{Binding Title}" />
                    </StackPanel>
                </DataTemplate>
            </xcad:DockingManager.DocumentHeaderTemplate>

            <!--Layout-->
            <xcad:LayoutRoot>
                <!--Horizontal panel-->
                <xcad:LayoutPanel Orientation="Horizontal">
                    <!--Left panel-->
                    <xcad:LayoutAnchorablePaneGroup>
                        <xcad:LayoutAnchorablePane>
                        </xcad:LayoutAnchorablePane>
                    </xcad:LayoutAnchorablePaneGroup>
                    <!--Vertical panel-->
                    <xcad:LayoutPanel Orientation="Vertical">
                        <!--Document pane group-->
                        <xcad:LayoutDocumentPaneGroup>
                            <xcad:LayoutDocumentPane>
                            </xcad:LayoutDocumentPane>
                        </xcad:LayoutDocumentPaneGroup>
                        <!--Anchorable pane group-->
                        <xcad:LayoutAnchorablePaneGroup>
                            <xcad:LayoutAnchorablePane>
                            </xcad:LayoutAnchorablePane>
                        </xcad:LayoutAnchorablePaneGroup>
                    </xcad:LayoutPanel>
                </xcad:LayoutPanel>
            </xcad:LayoutRoot>

        </xcad:DockingManager>

    </DockPanel>
</Window>
